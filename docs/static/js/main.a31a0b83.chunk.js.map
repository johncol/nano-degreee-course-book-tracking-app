{"version":3,"sources":["components/common/NavBar.jsx","components/MainNavigation.jsx","components/Welcome.jsx","components/common/Dropdown.jsx","constants/Shelves.js","components/BookMenu.jsx","components/Book.jsx","utils/book-utils.js","components/Shelf.jsx","components/ShelvesContainer.jsx","components/common/Notification.jsx","components/common/Loader.jsx","api/BooksAPI.js","components/SearchBooks.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBarWrapper","_ref","children","react_default","a","createElement","className","Title","_ref2","title","Link","to","ToggleNavBtn","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavItem","props","NavLink","Object","assign","NavLinks","_ref3","links","id","map","link","index","key","NavBar","NavBar_NavBarWrapper","NavBar_Title","NavBar_ToggleNavBtn","NavBar_NavLinks","MainNavigation","common_NavBar","NavBar_NavItem","exact","Welcome","Dropdown","dropdownId","label","selected","selectedOptionProp","optionsLabelProp","items","onItemSelected","fullDropdownId","aria-haspopup","aria-labelledby","item","onClick","Shelves","name","path","ShelvesLabels","forEach","shelf","BookMenu","shelfId","book","onSetBookShelf","common_Dropdown","coverUrlFor","imageLinks","smallThumbnail","Book","alt","style","backgroundImage","concat","authors","author","length","components_BookMenu","byTitle","book1","book2","Shelf","books","sort","components_Book","ShelvesContainer","booksInShelves","Route","render","components_Shelf","all","Notification","role","Loader","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","error","SearchBar","updateQuery","onUpdateQuery","placeholder","value","onChange","autoComplete","SearchResults","loading","validQuery","trim","SearchBooks","state","results","queryToTriggerSearch","showNotification","setShelvesToResults","result","_this","filter","callSearchApi","BooksApi","setState","finally","debounce","event","target","setBookShelfAndNotify","setTimeout","_this$state","this","common_Notification","SearchBooks_SearchBar","common_Loader","SearchBooks_SearchResults","React","Component","addBookToShelf","newShelfId","bookToUpdate","newShelfBooksList","toConsumableArray","newAllBooks","defineProperty","moveBookFromOneShelfToAnother","oldShelfId","_objectSpread3","updatedBook","leavingOutBookToUpdate","bookInShelf","oldShelfBooksList","organizeBooksInShelves","booksIdsPerShelf","allBooks","keys","_booksInShelves$all","thisShelfContainsBook","booksInShelf","indexOf","bind","booksInThisShelf","push","apply","App","currentlyReading","wantToRead","read","setBookShelf","newShelf","BooksAPI","bookAlreadyInShelves","updateBooksInShelvesState","apiResponses","Promise","_this2","components_MainNavigation","component","components_ShelvesContainer","components_SearchBooks","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a31a0b83.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = props => {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <NavBarWrapper>\r\n      {title && <Title title={title} />}\r\n      <ToggleNavBtn />\r\n      <NavLinks links={children} />\r\n    </NavBarWrapper>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  title: PropTypes.string\r\n};\r\n\r\nconst NavBarWrapper = ({ children }) => (\r\n  <nav className=\"navbar navbar-expand-sm navbar-light bg-light navigation\">{children}</nav>\r\n);\r\n\r\nconst Title = ({ title }) => (\r\n  <Link className=\"navbar-brand\" to=\"/\">\r\n    {title}\r\n  </Link>\r\n);\r\n\r\nconst ToggleNavBtn = () => (\r\n  <button\r\n    className=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarNav\"\r\n    aria-controls=\"navbarNav\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n  >\r\n    <span className=\"navbar-toggler-icon\" />\r\n  </button>\r\n);\r\n\r\nexport const NavItem = props => <NavLink {...props} className=\"nav-link\" />;\r\n\r\nconst NavLinks = ({ links }) => (\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul className=\"navbar-nav\">\r\n      {links.map((link, index) => (\r\n        <li className=\"nav-item\" key={index}>\r\n          {link}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nimport NavBar, { NavItem } from './common/NavBar';\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <NavBar title=\"My Book Tracking App\">\r\n      <NavItem exact to=\"/shelves\">\r\n        All books\r\n      </NavItem>\r\n      <NavItem to=\"/shelves/read\">Read</NavItem>\r\n      <NavItem to=\"/shelves/want-to-read\">Want to read</NavItem>\r\n      <NavItem to=\"/shelves/currently-reading\">Currently reading</NavItem>\r\n      <NavItem to=\"/search-books\">Search books</NavItem>\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from 'react';\r\n\r\nconst Welcome = () => {\r\n  return (\r\n    <div className=\"welcome\">\r\n      <section className=\"welcome-intro\">\r\n        <h1 className=\"welcome-title\">Welcome to your book tracking app</h1>\r\n        <p className=\"welcome-lead\">The only one you'll ever want to use again</p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Dropdown = props => {\r\n  const { dropdownId, className, label, selected, selectedOptionProp, optionsLabelProp, items, onItemSelected } = props;\r\n  const fullDropdownId = 'dropdownMenuButton-' + dropdownId;\r\n  return (\r\n    <div className={'dropdown ' + className}>\r\n      <button\r\n        className=\"btn btn-secondary dropdown-toggle\"\r\n        type=\"button\"\r\n        id={fullDropdownId}\r\n        data-toggle=\"dropdown\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        {label}\r\n      </button>\r\n      <div className=\"dropdown-menu\" aria-labelledby={fullDropdownId}>\r\n        {items.map(item => (\r\n          <button\r\n            key={item.id}\r\n            type=\"button\"\r\n            className={'dropdown-item' + (item[selectedOptionProp] === selected ? ' selected-item' : '')}\r\n            onClick={() => onItemSelected(item)}\r\n          >\r\n            {item[optionsLabelProp]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdown.propTypes = {\r\n  onItemSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Dropdown;\r\n","const Shelves = [\r\n  { id: 'wantToRead', name: 'Want to read', path: 'want-to-read' },\r\n  { id: 'currentlyReading', name: 'Currently reading', path: 'currently-reading' },\r\n  { id: 'read', name: 'Read', path: 'read' }\r\n];\r\n\r\nconst ShelvesLabels = {};\r\nShelves.forEach(shelf => (ShelvesLabels[shelf.id] = shelf.name));\r\n\r\nexport const labelFor = shelfId => ShelvesLabels[shelfId];\r\n\r\nexport default Shelves;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Dropdown from './common/Dropdown';\r\nimport Shelves, { labelFor } from '../constants/Shelves';\r\n\r\nconst BookMenu = ({ book, onSetBookShelf }) => {\r\n  return (\r\n    <Dropdown\r\n      className=\"book-menu\"\r\n      dropdownId={book.id}\r\n      label={labelFor(book.shelf) || 'add to'}\r\n      selected={book.shelf}\r\n      selectedOptionProp=\"id\"\r\n      optionsLabelProp=\"name\"\r\n      items={Shelves}\r\n      onItemSelected={onSetBookShelf}\r\n    />\r\n  );\r\n};\r\n\r\nBookMenu.propTypes = {\r\n  onSetBookShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BookMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BookMenu from './BookMenu';\r\n\r\nconst noCoverUrl =\r\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSFNL0hmpLOezaeiXdKjFLz4GpXndktadW31NAueLyXbkzZK9RSig';\r\n\r\nconst coverUrlFor = book => {\r\n  return book.imageLinks && book.imageLinks.smallThumbnail ? book.imageLinks.smallThumbnail : noCoverUrl;\r\n};\r\n\r\nconst Book = props => {\r\n  const { book, onSetBookShelf } = props;\r\n  return (\r\n    <section className=\"card book\">\r\n      <div className=\"book-cover\" alt={book.title} style={{ backgroundImage: `url(${coverUrlFor(book)})` }} />\r\n      <h5 className=\"book-title\">{book.title}</h5>\r\n      {book.authors && (\r\n        <h3 className=\"book-authors\">\r\n          <span>by</span>\r\n          <br />\r\n          {book.authors.map((author, index) => (\r\n            <span key={author} className=\"book-author\">\r\n              {author}\r\n              {index < book.authors.length - 1 ? ', ' : ''}\r\n            </span>\r\n          ))}\r\n        </h3>\r\n      )}\r\n      <BookMenu book={book} onSetBookShelf={shelf => onSetBookShelf(book, shelf)} />\r\n    </section>\r\n  );\r\n};\r\n\r\nBook.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  onSetBookShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Book;\r\n","export const byTitle = (book1, book2) => {\r\n  return book1.title > book2.title ? 1 : -1;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Book from './Book';\r\nimport { byTitle } from './../utils/book-utils';\r\n\r\nconst Shelf = props => {\r\n  const { books, onSetBookShelf } = props;\r\n  const toBookElement = book => <Book book={book} key={book.id} onSetBookShelf={onSetBookShelf} />;\r\n\r\n  return (\r\n    <div className=\"shelf\">\r\n      <p className=\"lead\">\r\n        <span>\r\n          Displaying {books.length} book{books.length !== 1 ? 's' : ''}\r\n        </span>\r\n      </p>\r\n      <div className=\"shelf-books\">{books.sort(byTitle).map(toBookElement)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShelf.propTypes = {\r\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onSetBookShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Shelf;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Shelf from './Shelf';\r\nimport Shelves from '../constants/Shelves';\r\n\r\nconst ShelvesContainer = props => {\r\n  const { booksInShelves, onSetBookShelf } = props;\r\n  return (\r\n    <div>\r\n      <Route\r\n        exact\r\n        path=\"/shelves\"\r\n        render={() => <Shelf books={booksInShelves.all} onSetBookShelf={onSetBookShelf} />}\r\n      />\r\n\r\n      {Shelves.map(shelf => (\r\n        <Route\r\n          key={shelf.id}\r\n          path={'/shelves/' + shelf.path}\r\n          render={() => <Shelf books={booksInShelves[shelf.id]} onSetBookShelf={onSetBookShelf} />}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nShelvesContainer.propTypes = {\r\n  booksInShelves: PropTypes.object.isRequired,\r\n  onSetBookShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ShelvesContainer;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ children }) => {\r\n  return (\r\n    <div className=\"notification alert alert-info\" role=\"alert\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return <div className=\"lds-dual-ring\" />;\r\n};\r\n\r\nexport default Loader;\r\n","const api = 'https://reactnd-books-api.udacity.com';\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n  token = localStorage.token = Math.random()\r\n    .toString(36)\r\n    .substr(-8);\r\n\r\nconst headers = {\r\n  Accept: 'application/json',\r\n  Authorization: token\r\n};\r\n\r\nexport const get = bookId =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json());\r\n\r\nexport const search = query =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => (data.books.error ? [] : data.books));\r\n\r\nexport const getBooksGroupedByShelf = () =>\r\n  fetch(`${api}/books/non-existing-book-id`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf: 'none' })\r\n  }).then(res => res.json());\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport Notification from './common/Notification.jsx';\r\nimport Loader from './common/Loader.jsx';\r\nimport Book from './Book';\r\nimport { byTitle } from './../utils/book-utils';\r\nimport * as BooksApi from './../api/BooksAPI';\r\n\r\nconst SearchBar = ({ query, onUpdateQuery: updateQuery }) => (\r\n  <div className=\"search-bar\">\r\n    <input\r\n      type=\"search\"\r\n      className=\"form-control\"\r\n      id=\"search-input\"\r\n      placeholder=\"Search books by name\"\r\n      value={query}\r\n      onChange={updateQuery}\r\n      autoComplete=\"off\"\r\n    />\r\n  </div>\r\n);\r\n\r\nconst SearchResults = ({ books, onSetBookShelf, query, loading }) => {\r\n  const toBookElement = book => <Book book={book} key={book.id} onSetBookShelf={onSetBookShelf} />;\r\n  const validQuery = query && query.trim() !== '';\r\n\r\n  return (\r\n    <div className=\"shelf\">\r\n      <p className=\"lead\">\r\n        {loading && <span>Searching..</span>}\r\n        {!loading && !validQuery && <span>Type something to search for</span>}\r\n        {!loading && validQuery && (\r\n          <span>\r\n            {books.length === 0 && <span>No books were found</span>}\r\n            {books.length > 0 && (\r\n              <span>\r\n                {books.length} book{books.length !== 1 ? 's were' : ' was'} found\r\n              </span>\r\n            )}\r\n          </span>\r\n        )}\r\n      </p>\r\n      <div className=\"shelf-books\">{books.sort(byTitle).map(toBookElement)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass SearchBooks extends React.Component {\r\n  state = {\r\n    results: [],\r\n    query: '',\r\n    queryToTriggerSearch: '',\r\n    showNotification: false,\r\n    loading: false\r\n  };\r\n\r\n  setShelvesToResults = results => {\r\n    return results.map(result => {\r\n      const books = this.props.booksInShelves.filter(book => book.id === result.id);\r\n      if (books.length === 1) {\r\n        result.shelf = books[0].shelf;\r\n      }\r\n      return result;\r\n    });\r\n  };\r\n\r\n  callSearchApi = query => {\r\n    BooksApi.search(query)\r\n      .then(results => {\r\n        this.setState({\r\n          results: this.setShelvesToResults(results)\r\n        });\r\n      })\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  search = debounce(query => {\r\n    if (query !== '') {\r\n      this.setState({\r\n        loading: true,\r\n        queryToTriggerSearch: query\r\n      });\r\n      this.callSearchApi(query);\r\n    } else {\r\n      this.setState({ results: [] });\r\n    }\r\n  }, 500);\r\n\r\n  updateQuery = event => {\r\n    const query = event.target.value;\r\n    this.setState(() => ({ query }), () => this.search(query.trim()));\r\n  };\r\n\r\n  setBookShelfAndNotify = (book, shelf) => {\r\n    this.setState({ showNotification: true });\r\n    setTimeout(() => this.setState({ showNotification: false }), 1500);\r\n    this.props.onSetBookShelf(book, shelf);\r\n  };\r\n\r\n  render() {\r\n    const { results, query, queryToTriggerSearch, showNotification, loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"search-books\">\r\n        {showNotification && <Notification>Book added to shelf</Notification>}\r\n        <SearchBar query={query} onUpdateQuery={this.updateQuery} />\r\n        {loading && <Loader />}\r\n        <SearchResults\r\n          loading={loading}\r\n          query={queryToTriggerSearch}\r\n          books={results}\r\n          shelf={{ name: 'search' }}\r\n          onSetBookShelf={this.setBookShelfAndNotify}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBooks.propTypes = {\r\n  onSetBookShelf: PropTypes.func.isRequired,\r\n  booksInShelves: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default SearchBooks;\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport MainNavigation from './components/MainNavigation';\r\nimport Welcome from './components/Welcome';\r\nimport ShelvesContainer from './components/ShelvesContainer';\r\nimport SearchBooks from './components/SearchBooks';\r\n\r\nimport './App.scss';\r\nimport * as BooksAPI from './api/BooksAPI';\r\n\r\nconst addBookToShelf = (state, newShelfId, bookToUpdate) => {\r\n  bookToUpdate.shelf = newShelfId;\r\n  const newShelfBooksList = [...state.booksInShelves[newShelfId], bookToUpdate];\r\n  const newAllBooks = [...state.booksInShelves.all, bookToUpdate];\r\n\r\n  return {\r\n    booksInShelves: {\r\n      ...state.booksInShelves,\r\n      all: newAllBooks,\r\n      [newShelfId]: newShelfBooksList\r\n    }\r\n  };\r\n};\r\n\r\nconst moveBookFromOneShelfToAnother = (state, oldShelfId, newShelfId, bookToUpdate) => {\r\n  const updatedBook = {\r\n    ...bookToUpdate,\r\n    shelf: newShelfId\r\n  };\r\n  const leavingOutBookToUpdate = bookInShelf => bookInShelf.id !== bookToUpdate.id;\r\n  const oldShelfBooksList = state.booksInShelves[oldShelfId].filter(leavingOutBookToUpdate);\r\n  const newShelfBooksList = [...state.booksInShelves[newShelfId], updatedBook];\r\n  const newAllBooks = [...state.booksInShelves.all.filter(leavingOutBookToUpdate), updatedBook];\r\n\r\n  return {\r\n    booksInShelves: {\r\n      ...state.booksInShelves,\r\n      all: newAllBooks,\r\n      [oldShelfId]: oldShelfBooksList,\r\n      [newShelfId]: newShelfBooksList\r\n    }\r\n  };\r\n};\r\n\r\nconst organizeBooksInShelves = (booksIdsPerShelf, allBooks) => {\r\n  const shelfContainsBook = (booksInShelf, book) => booksInShelf.indexOf(book.id) !== -1;\r\n\r\n  const booksInShelves = { all: [] };\r\n  Object.keys(booksIdsPerShelf).forEach(shelf => {\r\n    const thisShelfContainsBook = shelfContainsBook.bind(null, booksIdsPerShelf[shelf]);\r\n    const booksInThisShelf = allBooks.filter(thisShelfContainsBook);\r\n    booksInShelves[shelf] = booksInThisShelf;\r\n    booksInShelves.all.push(...booksInThisShelf);\r\n  });\r\n\r\n  return booksInShelves;\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    booksInShelves: {\r\n      currentlyReading: [],\r\n      wantToRead: [],\r\n      read: [],\r\n      all: []\r\n    }\r\n  };\r\n\r\n  setBookShelf = (bookToUpdate, newShelf) => {\r\n    const oldShelfId = bookToUpdate.shelf;\r\n    const newShelfId = newShelf.id;\r\n    if (oldShelfId === newShelfId) return null;\r\n\r\n    BooksAPI.update(bookToUpdate, newShelfId).then(() => {\r\n      const bookAlreadyInShelves = !!oldShelfId;\r\n      this.setState(state => {\r\n        return bookAlreadyInShelves\r\n          ? moveBookFromOneShelfToAnother(state, oldShelfId, newShelfId, bookToUpdate)\r\n          : addBookToShelf(state, newShelfId, bookToUpdate);\r\n      });\r\n    });\r\n  };\r\n\r\n  updateBooksInShelvesState = apiResponses => {\r\n    const booksIdsPerShelf = apiResponses[0];\r\n    const allBooks = apiResponses[1];\r\n    const booksInShelves = organizeBooksInShelves(booksIdsPerShelf, allBooks);\r\n    this.setState({ booksInShelves });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const booksIdsPerShelf = BooksAPI.getBooksGroupedByShelf();\r\n    const allBooks = BooksAPI.getAll();\r\n    Promise.all([booksIdsPerShelf, allBooks]).then(this.updateBooksInShelvesState);\r\n  }\r\n\r\n  render() {\r\n    const { booksInShelves } = this.state;\r\n    return (\r\n      <div>\r\n        <MainNavigation />\r\n\r\n        <div className=\"content\">\r\n          <Route exact path=\"/\" component={Welcome} />\r\n          <Route\r\n            path=\"/shelves\"\r\n            render={() => <ShelvesContainer booksInShelves={booksInShelves} onSetBookShelf={this.setBookShelf} />}\r\n          />\r\n          <Route\r\n            path=\"/search-books\"\r\n            render={() => <SearchBooks onSetBookShelf={this.setBookShelf} booksInShelves={booksInShelves.all} />}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}